// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. 
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SysUserDao is the data access object for table sys_user.
type SysUserDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns SysUserColumns // columns contains all the column names of Table for convenient usage.
}

// SysUserColumns defines and stores column names for table sys_user.
type SysUserColumns struct {
	UserId     string // 用户ID                   
    UserName   string // 用户账号                 
    NickName   string // 用户昵称                 
    Password   string // 登录密码                 
    Mobile     string // 手机号码                 
    Avatar     string // 用户头像地址             
    Status     string // 用户状态；0:禁用,1:正常  
    DeptId     string // 部门id                   
    Remark     string // 备注                     
    LoginIp    string // 最后登录IP               
    LoginDate  string // 最后登录时间             
    CreatedAt  string // 创建时间                 
    UpdatedAt  string // 更新时间                 
    DeletedAt  string // 删除时间
}

//  sysUserColumns holds the columns for table sys_user.
var sysUserColumns = SysUserColumns{
	UserId:    "user_id",     
            UserName:  "user_name",   
            NickName:  "nick_name",   
            Password:  "password",    
            Mobile:    "mobile",      
            Avatar:    "avatar",      
            Status:    "status",      
            DeptId:    "dept_id",     
            Remark:    "remark",      
            LoginIp:   "login_ip",    
            LoginDate: "login_date",  
            CreatedAt: "created_at",  
            UpdatedAt: "updated_at",  
            DeletedAt: "deleted_at",
}

// NewSysUserDao creates and returns a new DAO object for table data access.
func NewSysUserDao() *SysUserDao {
	return &SysUserDao{
		group:   "default",
		table:   "sys_user",
		columns: sysUserColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysUserDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SysUserDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SysUserDao) Columns() SysUserColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SysUserDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysUserDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysUserDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}