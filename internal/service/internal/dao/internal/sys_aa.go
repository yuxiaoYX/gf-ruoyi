// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. 
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// SysAaDao is the data access object for table sys_aa.
type SysAaDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns SysAaColumns // columns contains all the column names of Table for convenient usage.
}

// SysAaColumns defines and stores column names for table sys_aa.
type SysAaColumns struct {
	ConfigId     string // 参数主键             
    ConfigName   string // 参数名称             
    ConfigKey    string // 参数键名             
    ConfigValue  string // 参数键值             
    ConfigType   string // 系统内置（Y是 N否）  
    Remark       string // 备注                 
    CreatedAt    string // 创建时间             
    UpdatedAt    string // 更新时间             
    DeletedAt    string // 删除时间
}

//  sysAaColumns holds the columns for table sys_aa.
var sysAaColumns = SysAaColumns{
	ConfigId:    "config_id",     
            ConfigName:  "config_name",   
            ConfigKey:   "config_key",    
            ConfigValue: "config_value",  
            ConfigType:  "config_type",   
            Remark:      "remark",        
            CreatedAt:   "created_at",    
            UpdatedAt:   "updated_at",    
            DeletedAt:   "deleted_at",
}

// NewSysAaDao creates and returns a new DAO object for table data access.
func NewSysAaDao() *SysAaDao {
	return &SysAaDao{
		group:   "default",
		table:   "sys_aa",
		columns: sysAaColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *SysAaDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *SysAaDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *SysAaDao) Columns() SysAaColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *SysAaDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *SysAaDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *SysAaDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}